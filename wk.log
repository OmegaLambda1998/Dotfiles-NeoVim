

Debug Started for v3.16.0
{
  branch = "main",
  commit = "0e76a87ac51772569aec678dc74baa8e2a86100c"
}
new Mode(n:1)
Trigger(add) Mode(n:1) ' " ` g` g' z= , [ <C-W> g ] z
Trigger(del) Mode(n:1) z ` g` g' ' z= " , [ <C-W> g ]
LspAttach(1)
new Mode(n:1)
Trigger(add) Mode(n:1) ' " ` g` g' z= ] <C-W> g [ , z
BufNew(2)
BufNew(3)
BufNew(4)
BufNew(5)
BufNew(6)
on_key: :
ModeChanged(n:c)
  new Mode(c:1)
  Safe(true)
Trigger(add) Mode(c:1) <C-R>
on_key: m
BufNew(7)
BufNew(8)
on_key: e
on_key: s
on_key: s
BufNew(9)
BufNew(10)
on_key: <Tab><CR><CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) z " ` g` g' ' z= , [ <C-W> g ]
Trigger(add) Mode(n:1) ' " ` g` g' z= ] <C-W> g [ , z
BufNew(11)
BufNew(12)
BufNew(13)
BufNew(14)
BufNew(15)
BufNew(16)
BufNew(17)
BufNew(18)
BufNew(19)
BufNew(20)
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: L
BufNew(21)
on_key: i
on_key: n
on_key: t
BufNew(22)
BufNew(23)
on_key: I
BufNew(24)
BufNew(25)
BufNew(26)
on_key: <Tab><CR><CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) z " ` g` g' ' z= , [ <C-W> g ]
Trigger(add) Mode(n:1) ' " ` g` g' z= ] <C-W> g [ , z
BufNew(27)
on_key: <LeftRelease>
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: I
ModeChanged(n:i)
  new Mode(i:1)
  Safe(true)
Trigger(add) Mode(i:1) <C-R>
on_key: <BS>
on_key: <BS>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: j
on_key: I
ModeChanged(n:i)
  Safe(true)
on_key: <BS>
on_key: <Space>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: b
on_key: b
on_key: b
on_key: h
on_key: h
on_key: h
on_key: K
BufNew(28)
on_key: h
on_key: h
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Space>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: j
on_key: k
on_key: K
on_key: l
on_key: d
ModeChanged(n:no)
  new Mode(o:1)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:1)
    continue:  Mode(o:1)
    getchar
    Trigger(add) Mode(o:1) ] [ g
    on_key: t
    got: t
    suspend: Mode(o:1)
    Trigger(del) Mode(o:1) ] [ g
    feedkeys: Mode(o:1) t
on_key: t
on_key: e
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:1) ] [ g
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:1)
    continue:  Mode(o:1)
    getchar
    on_key: t
    got: t
    suspend: Mode(o:1)
    Trigger(del) Mode(o:1) ] [ g
    feedkeys: Mode(o:1) t
on_key: t
on_key: e
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:1) ] [ g
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: f
on_key: u
on_key: n
on_key: c
on_key: t
on_key: i
on_key: o
on_key: n
on_key: (
on_key: )
on_key: <Space>
on_key: e
on_key: n
on_key: d
on_key: <Esc>
ModeChanged(i:n)
  Unsafe(pending "h")
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) z z= ` g` g' ' , " [ <C-W> g ]
on_key: h
Trigger(add) Mode(n:1) ' " ` g` g' z= ] <C-W> g [ , z
on_key: h
on_key: h
on_key: l
on_key: l
on_key: l
on_key: l
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Space>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: h
on_key: h
on_key: h
on_key: h
on_key: K
BufNew(33)
on_key: l
on_key: h
on_key: h
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: b
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:1)
    continue:  Mode(o:1)
    getchar
    on_key: t
    got: t
    suspend: Mode(o:1)
    Trigger(del) Mode(o:1) ] [ g
    feedkeys: Mode(o:1) t
on_key: t
on_key: e
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:1) ] [ g
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:1)
    continue:  Mode(o:1)
    getchar
    on_key: w
    got: w
    suspend: Mode(o:1)
    Trigger(del) Mode(o:1) ] [ g
    feedkeys: Mode(o:1) w
on_key: w
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:1) ] [ g
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: i
on_key: f
on_key: <Space>
on_key: t
on_key: r
on_key: u
on_key: e
on_key: <Space>
on_key: t
on_key: h
on_key: e
on_key: n
on_key: <Space>
on_key: e
on_key: n
on_key: d
on_key: <Space>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: h
on_key: b
on_key: b
on_key: h
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Space>
on_key: p
on_key: r
on_key: i
on_key: n
on_key: t
on_key: (
on_key: h
on_key: <BS>
on_key: "
on_key: h
on_key: i
on_key: "
on_key: )
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: j
on_key: k
on_key: K
BufNew(38)
on_key: b
on_key: b
on_key: b
on_key: b
on_key: b
on_key: w
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: t
on_key: h
on_key: e
on_key: n
on_key: <Space>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: w
on_key: w
on_key: w
on_key: w
on_key: w
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:1)
    continue:  Mode(o:1)
    getchar
    on_key: w
    got: w
    suspend: Mode(o:1)
    Trigger(del) Mode(o:1) ] [ g
    feedkeys: Mode(o:1) w
on_key: w
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:1) ] [ g
on_key: k
on_key: j
on_key: K
on_key: b
on_key: b
on_key: K
BufNew(41)
on_key: j
on_key: j
on_key: j
on_key: k
on_key: k
on_key: K
on_key: j
on_key: k
on_key: J
on_key: J
on_key: J
on_key: J
on_key: J
on_key: j
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: ,
State(start): Mode(n:0) Node(,) { keys = "," }
  update Mode(n:1)
  continue: , Mode(n:1)
  getchar
  on_key: p
  got: p
  continue: ,p Mode(n:1)
  getchar
  on_key: r
  got: r
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) z z= ` g` g' ' , " [ <C-W> g ]
  feedkeys: Mode(n:1) ,pr
on_key: ,pr
Trigger(add) Mode(n:1) ' " ` g` g' z= ] <C-W> g [ , z
BufNew(44)
BufNew(45)
BufNew(46)
BufNew(47)
BufNew(48)
BufEnter(46)
  new Mode(n:46)
Trigger(add) Mode(n:46) " ' ` z= g` g' <C-W> z ] , g [
ModeChanged(n:i)
  new Mode(i:46)
  Safe(true)
Trigger(add) Mode(i:46) <C-R>
on_key: <CR>
ModeChanged(i:n)
  Safe(true)
BufEnter(1)
BufNew(49)
LspAttach(49)
BufReadPost(49)
BufEnter(49)
  new Mode(n:49)
Trigger(add) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
BufNew(50)
BufNew(51)
on_key: <LeftRelease>
BufNew(52)
on_key: k
BufNew(53)
BufNew(54)
on_key: V
ModeChanged(n:V)
  new Mode(x:49)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = false }
    update Mode(x:49)
    continue:  Mode(x:49)
    getchar
    Trigger(add) Mode(x:49) " ] [ <C-W> g z
    on_key: j
    got: j
    suspend: Mode(x:49)
    Trigger(del) Mode(x:49) " ] [ z g <C-W>
    feedkeys: Mode(x:49) j
on_key: j
Trigger(add) Mode(x:49) " ] [ <C-W> g z
on_key: j
on_key: d
ModeChanged(V:n)
  Safe(true)
on_key: k
on_key: d
ModeChanged(n:no)
  new Mode(o:49)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:49)
    continue:  Mode(o:49)
    getchar
    Trigger(add) Mode(o:49) ] [ g
    on_key: d
    got: d
    suspend: Mode(o:49)
    Trigger(del) Mode(o:49) ] [ g
    feedkeys: Mode(o:49) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:49) ] [ g
on_key: :
ModeChanged(n:c)
  new Mode(c:49)
  Safe(true)
Trigger(add) Mode(c:49) <C-R>
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:49)
  Trigger(del) Mode(n:49) " ` z= ] <C-W> g [ , z g' g` '
Trigger(add) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
BufNew(60)
BufNew(61)
BufNew(62)
on_key: ,
State(start): Mode(n:0) Node(,) { keys = "," }
  update Mode(n:49)
  continue: , Mode(n:49)
  getchar
  on_key: p
  got: p
  continue: ,p Mode(n:49)
  getchar
  on_key: r
  got: r
  suspend: Mode(n:49)
  Trigger(del) Mode(n:49) " ` z= ] <C-W> g [ , z g' g` '
  feedkeys: Mode(n:49) ,pr
on_key: ,pr
Trigger(add) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
BufNew(65)
BufNew(66)
BufNew(67)
BufNew(68)
BufNew(69)
BufEnter(67)
  new Mode(n:67)
Trigger(add) Mode(n:67) " ' ` z= g` g' <C-W> z ] , g [
ModeChanged(n:i)
  new Mode(i:67)
  Safe(true)
Trigger(add) Mode(i:67) <C-R>
on_key: l
on_key: i
on_key: n
on_key: y
on_key: t
on_key: <BS>
on_key: <BS>
on_key: t
on_key: <CR>
ModeChanged(i:n)
  Safe(true)
BufEnter(49)
BufNew(70)
LspAttach(70)
BufReadPost(70)
BufEnter(70)
  new Mode(n:70)
Trigger(add) Mode(n:70) ' " ` g` g' z= ] <C-W> g [ , z
on_key: /
ModeChanged(n:c)
  new Mode(c:70)
  Safe(true)
Trigger(add) Mode(c:70) <C-R>
on_key: d
on_key: e
on_key: b
on_key: o
on_key: u
on_key: n
on_key: d
on_key: <BS>
on_key: c
on_key: e
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:70)
  Trigger(del) Mode(n:70) ' " ` g` g' z= ] <C-W> g z , [
Trigger(add) Mode(n:70) ' " ` g` g' z= ] <C-W> g [ , z
on_key: n
on_key: N
on_key: k
on_key: j
on_key: y
ModeChanged(n:no)
  new Mode(o:70)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:70)
    continue:  Mode(o:70)
    getchar
    Trigger(add) Mode(o:70) ] [ g
    on_key: y
    got: y
    suspend: Mode(o:70)
    Trigger(del) Mode(o:70) g ] [
    feedkeys: Mode(o:70) y
on_key: y
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:70) ] [ g
on_key: <C-H>
ModeChanged(n:c)
  Unsafe(pending "B")
  suspend: Mode(c:70)
  Trigger(del) Mode(c:70) <C-R>
ModeChanged(c:n)
  cooldown
BufEnter(49)
Trigger(add) Mode(c:70) <C-R>
on_key: <LeftRelease>
on_key: j
on_key: p
on_key: k
on_key: o
ModeChanged(n:i)
  new Mode(i:49)
  Safe(true)
Trigger(add) Mode(i:49) <C-R>
on_key: l
on_key: <BS>
on_key: <CR>
on_key: l
on_key: i
on_key: n
on_key: t
on_key: .
on_key: p
on_key: o
on_key: s
on_key: t
on_key: :
on_key: i
on_key: n
on_key: s
on_key: e
on_key: r
on_key: t
on_key: (
on_key: )
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
BufNew(73)
on_key: <CR>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: k
on_key: o
ModeChanged(n:i)
  Safe(true)
on_key: <BS>
on_key: <BS>
on_key: f
on_key: u
on_key: n
on_key: c
on_key: t
on_key: i
on_key: o
on_key: n
on_key: (
on_key: )
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: j
on_key: I
ModeChanged(n:i)
  Safe(true)
on_key: e
on_key: n
on_key: d
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: j
on_key: k
on_key: k
on_key: o
ModeChanged(n:i)
  Safe(true)
on_key: C
on_key: F
on_key: H
on_key: G
on_key: .
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: G
on_key: .
on_key: a
on_key: u
on_key: c
on_key: m
on_key: d
on_key: :
on_key: o
on_key: n
on_key: (
on_key: )
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: o
on_key: p
on_key: t
on_key: s
on_key: .
on_key: e
on_key: v
on_key: e
on_key: n
on_key: t
on_key: s
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: b
on_key: b
on_key: b
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: l
on_key: i
on_key: n
on_key: t
on_key: .
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: $
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: ,
on_key: <Space>
on_key: d
on_key: e
on_key: b
on_key: o
on_key: u
on_key: n
on_key: c
on_key: e
on_key: (
on_key: )
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: 1
on_key: 0
on_key: 0
on_key: ,
on_key: <Space>
on_key: r
on_key: u
on_key: n
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: l
on_key: l
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: ,
on_key: <Space>
on_key: {
on_key: }
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: g
on_key: r
on_key: u
on_key: p
on_key: <BS>
on_key: <BS>
on_key: o
on_key: u
on_key: p
on_key: <Space>
on_key: =
on_key: <Space>
on_key: "
on_key: l
on_key: i
on_key: n
on_key: t
on_key: "
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: j
on_key: j
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:49)
    continue:  Mode(o:49)
    getchar
    on_key: d
    got: d
    suspend: Mode(o:49)
    Trigger(del) Mode(o:49) g [ ]
    feedkeys: Mode(o:49) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:49) ] [ g
on_key: k
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:49)
  Trigger(del) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
Trigger(add) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
on_key: j
on_key: j
on_key: j
BufNew(76)
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:49)
    continue:  Mode(o:49)
    getchar
    on_key: d
    got: d
    suspend: Mode(o:49)
    Trigger(del) Mode(o:49) g [ ]
    feedkeys: Mode(o:49) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:49) ] [ g
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:49)
    continue:  Mode(o:49)
    getchar
    on_key: d
    got: d
    suspend: Mode(o:49)
    Trigger(del) Mode(o:49) g [ ]
    feedkeys: Mode(o:49) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:49) ] [ g
on_key: k
on_key: A
ModeChanged(n:i)
  Safe(true)
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:49)
  Trigger(del) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
Trigger(add) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
on_key: k
on_key: k
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: <Esc>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:49)
  Trigger(del) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
Trigger(add) Mode(n:49) ' " ` g` g' z= ] <C-W> g [ , z
on_key: <C-H>
ModeChanged(n:c)
  Unsafe(pending "B")
  suspend: Mode(c:49)
  Trigger(del) Mode(c:49) <C-R>
ModeChanged(c:n)
  cooldown
BufEnter(1)
Trigger(add) Mode(c:49) <C-R>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: <Esc>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ` g` g' z= , [ <C-W> g ] z ' "
Trigger(add) Mode(n:1) ' " ` g` g' z= ] <C-W> g [ , z
on_key: <C-L>
ModeChanged(n:c)
  Unsafe(pending "B")
  suspend: Mode(c:1)
  Trigger(del) Mode(c:1) <C-R>
ModeChanged(c:n)
  cooldown
BufEnter(49)
Trigger(add) Mode(c:1) <C-R>
on_key: <C-L>
ModeChanged(n:c)
  Unsafe(pending "B")
  suspend: Mode(c:49)
  Trigger(del) Mode(c:49) <C-R>
ModeChanged(c:n)
  cooldown
BufEnter(70)
Trigger(add) Mode(c:49) <C-R>
on_key: ,
State(start): Mode(n:0) Node(,) { keys = "," }
  update Mode(n:70)
  continue: , Mode(n:70)
  getchar
  on_key: p
  got: p
  continue: ,p Mode(n:70)
  getchar
  on_key: r
  got: r
  suspend: Mode(n:70)
  Trigger(del) Mode(n:70) ' " ` g` g' z= ] <C-W> g z , [
  feedkeys: Mode(n:70) ,pr
on_key: ,pr
Trigger(add) Mode(n:70) ' " ` g` g' z= ] <C-W> g [ , z
BufNew(84)
BufNew(85)
BufNew(86)
BufNew(87)
BufNew(88)
BufEnter(86)
  new Mode(n:86)
Trigger(add) Mode(n:86) " ' ` z= g` g' <C-W> z ] , g [
ModeChanged(n:i)
  new Mode(i:86)
  Safe(true)
Trigger(add) Mode(i:86) <C-R>
on_key: c
on_key: o
on_key: n
on_key: f
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: f
on_key: o
on_key: r
on_key: m
on_key: a
on_key: t
on_key: <CR>
ModeChanged(i:n)
  Safe(true)
BufEnter(70)
BufNew(89)
LspAttach(89)
BufReadPost(89)
BufEnter(89)
  new Mode(n:89)
Trigger(add) Mode(n:89) ' " ` g` g' z= ] <C-W> g [ , z
on_key: G
BufNew(90)
on_key: <LeftRelease>
on_key: m
on_key: <Esc>
on_key: k
on_key: o
ModeChanged(n:i)
  new Mode(i:89)
  Safe(true)
Trigger(add) Mode(i:89) <C-R>
on_key: C
on_key: F
on_key: G
on_key: .
on_key: k
on_key: e
on_key: y
on_key: :
on_key: m
on_key: a
on_key: o
on_key: <BS>
on_key: p
on_key: (
on_key: )
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: {
on_key: }
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: <CR>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: k
on_key: o
ModeChanged(n:i)
  Safe(true)
on_key: "
on_key: <lt>
on_key: l
on_key: e
on_key: a
on_key: d
on_key: e
on_key: r
on_key: -
on_key: w
on_key: <BS>
on_key: <BS>
on_key: >
on_key: w
on_key: "
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: ,
State(start): Mode(n:0) Node(,) { keys = "," }
  update Mode(n:89)
  continue: , Mode(n:89)
  getchar
  on_key: <Esc>
  got: <Esc>
on_key: A
ModeChanged(n:i)
  Safe(true)
on_key: ,
on_key: <CR>
on_key: f
on_key: u
on_key: n
on_key: c
on_key: t
on_key: i
on_key: o
on_key: n
on_key: (
on_key: )
on_key: <CR>
on_key: e
on_key: n
on_key: d
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: k
on_key: o
ModeChanged(n:i)
  Safe(true)
on_key: C
on_key: F
on_key: G
on_key: .
on_key: f
on_key: o
on_key: r
on_key: m
on_key: a
on_key: t
on_key: <Space>
on_key: =
on_key: <Space>
on_key: f
on_key: a
on_key: <BS>
on_key: <BS>
BufNew(93)
on_key: <BS>
on_key: <BS>
on_key: <BS>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: b
on_key: D
ModeChanged(n:no)
  new Mode(o:89)
  Unsafe(pending "$")
  suspend: Mode(o:89)
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:89) ] [ g
on_key: A
ModeChanged(n:i)
  Safe(true)
on_key: i
on_key: <BS>
on_key: d
on_key: <Tab>.
on_key: f
on_key: o
on_key: r
on_key: m
on_key: a
on_key: t
on_key: <Space>
on_key: =
on_key: <Space>
on_key: t
on_key: r
on_key: u
on_key: e
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: y
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:89)
    continue:  Mode(o:89)
    getchar
    on_key: y
    got: y
    suspend: Mode(o:89)
    Trigger(del) Mode(o:89) ] [ g
    feedkeys: Mode(o:89) y
on_key: y
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:89) ] [ g
on_key: p
on_key: w
on_key: $
on_key: b
on_key: D
ModeChanged(n:no)
  Unsafe(pending "$")
  suspend: Mode(o:89)
  Trigger(del) Mode(o:89) ] [ g
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:89) ] [ g
on_key: A
ModeChanged(n:i)
  Safe(true)
on_key: f
on_key: a
on_key: l
on_key: s
on_key: e
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: k
on_key: o
ModeChanged(n:i)
  Safe(true)
on_key: C
on_key: F
on_key: G
on_key: .
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: d
ModeChanged(n:no)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:89)
    continue:  Mode(o:89)
    getchar
    on_key: d
    got: d
    suspend: Mode(o:89)
    Trigger(del) Mode(o:89) ] [ g
    feedkeys: Mode(o:89) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:89) ] [ g
on_key: k
on_key: o
ModeChanged(n:i)
  Safe(true)
on_key: v
on_key: i
on_key: m
on_key: .
on_key: c
on_key: m
on_key: d
on_key: (
on_key: )
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: i
ModeChanged(n:i)
  Safe(true)
on_key: "
on_key: L
on_key: <BS>
on_key: :
on_key: w
on_key: "
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: k
on_key: j
on_key: j
on_key: j
on_key: j
on_key: k
on_key: k
on_key: k
on_key: j
on_key: j
on_key: A
ModeChanged(n:i)
  Safe(true)
on_key: ,
on_key: <CR>
on_key: d
on_key: e
on_key: s
on_key: c
on_key: <Space>
on_key: =
on_key: <Space>
on_key: "
on_key: S
on_key: a
on_key: v
on_key: e
on_key: <Space>
on_key: w
on_key: /
on_key: o
on_key: <Space>
on_key: f
on_key: o
on_key: r
on_key: m
on_key: a
on_key: t
on_key: "
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  new Mode(c:89)
  Safe(true)
Trigger(add) Mode(c:89) <C-R>
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:89)
  Trigger(del) Mode(n:89) ' " z= ] <C-W> g z , [ g' g` `
Trigger(add) Mode(n:89) ' " ` g` g' z= ] <C-W> g [ , z
on_key: <C-H>
ModeChanged(n:c)
  Unsafe(pending "B")
  suspend: Mode(c:89)
  Trigger(del) Mode(c:89) <C-R>
ModeChanged(c:n)
  cooldown
BufEnter(70)
Trigger(add) Mode(c:89) <C-R>
on_key: G
BufNew(98)
on_key: <C-H>
ModeChanged(n:c)
  Unsafe(pending "B")
  suspend: Mode(c:70)
  Trigger(del) Mode(c:70) <C-R>
ModeChanged(c:n)
  cooldown
BufEnter(49)
Trigger(add) Mode(c:70) <C-R>
on_key: <C-H>
ModeChanged(n:c)
  Unsafe(pending "B")
  suspend: Mode(c:49)
  Trigger(del) Mode(c:49) <C-R>
ModeChanged(c:n)
  cooldown
BufEnter(1)
Trigger(add) Mode(c:49) <C-R>
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ` g` g' z= , [ <C-W> ] g ' z "
Trigger(add) Mode(n:1) ' " ` g` g' z= ] <C-W> g [ , z
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ` g` g' z= , [ <C-W> ] g ' z "
Trigger(add) Mode(n:1) ' " ` g` g' z= ] <C-W> g [ , z


Debug Started for v3.16.0
{
  branch = "main",
  commit = "0e76a87ac51772569aec678dc74baa8e2a86100c"
}
new Mode(n:1)
Trigger(add) Mode(n:1) ` ' " g' g` z= , g <C-W> ] [ z
BufNew(2)
Trigger(del) Mode(n:1) g' g` z= , g <C-W> ] ` z ' " [
LspAttach(1)
new Mode(n:1)
Trigger(add) Mode(n:1) ` ' " g' g` z= , g ] <C-W> [ z
on_key: ,
State(start): Mode(n:0) Node(,) { keys = "," }
  update Mode(n:1)
  continue: , Mode(n:1)
  getchar
  on_key: n
  got: n
  continue: ,n Mode(n:1)
  getchar
  BufNew(5)
  on_key: n
  got: n
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) g' g` z= , g <C-W> ] ` z ' " [
  feedkeys: Mode(n:1) ,nn
on_key: ,nn
BufNew(6)
BufEnter(6)
  new Mode(n:6)
Trigger(add) Mode(n:6) ` ' " g' g` z= , g ] <C-W> [ z
Trigger(add) Mode(n:1) ` ' " g' g` z= , g ] <C-W> [ z
BufNew(7)
BufNew(8)
on_key: q
BufEnter(1)
BufNew(9)
BufNew(10)
on_key: ,
State(start): Mode(n:0) Node(,) { keys = "," }
  update Mode(n:1)
  continue: , Mode(n:1)
  getchar
  on_key: p
  got: p
  continue: ,p Mode(n:1)
  getchar
  BufNew(13)
  BufNew(14)
  on_key: r
  got: r
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ` ' " z [ g' g` z= <C-W> ] , g
  feedkeys: Mode(n:1) ,pr
on_key: ,pr
Trigger(add) Mode(n:1) ` ' " g' g` z= , g ] <C-W> [ z
BufNew(15)
BufNew(16)
BufNew(17)
BufNew(18)
BufNew(19)
BufEnter(17)
  new Mode(n:17)
Trigger(add) Mode(n:17) ` " ' z= g' g` , <C-W> z g ] [
ModeChanged(n:i)
  new Mode(i:17)
  Safe(true)
Trigger(add) Mode(i:17) <C-R>
on_key: <CR>
ModeChanged(i:n)
  Safe(true)
BufEnter(1)
BufNew(20)
LspAttach(20)
BufReadPost(20)
BufEnter(20)
  new Mode(n:20)
Trigger(add) Mode(n:20) ` ' " g' g` z= , g ] <C-W> [ z
on_key: G
on_key: ,
State(start): Mode(n:0) Node(,) { keys = "," }
  update Mode(n:20)
  continue: , Mode(n:20)
  getchar
  BufNew(23)
  BufNew(24)
  on_key: <Esc>
  got: <Esc>
BufNew(25)
on_key: <LeftRelease>
BufNew(26)
BufNew(27)
on_key: l
on_key: d
ModeChanged(n:no)
  new Mode(o:20)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:20)
    continue:  Mode(o:20)
    getchar
    Trigger(add) Mode(o:20) g ] [
    on_key: w
    got: w
    suspend: Mode(o:20)
    Trigger(del) Mode(o:20) g ] [
    feedkeys: Mode(o:20) w
on_key: w
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:20) g ] [
on_key: x
ModeChanged(n:no)
  Unsafe(pending "l")
  suspend: Mode(o:20)
  Trigger(del) Mode(o:20) g ] [
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:20) g ] [
on_key: K
BufNew(30)
on_key: k
on_key: j
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:20)
  continue: g Mode(n:20)
  getchar
  on_key: g
  got: g
  suspend: Mode(n:20)
  Trigger(del) Mode(n:20) z " ' ` g' g` z= , g ] <C-W> [
  feedkeys: Mode(n:20) gg
on_key: g
on_key: g
Trigger(add) Mode(n:20) ` ' " g' g` z= , g ] <C-W> [ z
on_key: G
on_key: <LeftRelease>
on_key: x
ModeChanged(n:no)
  Unsafe(pending "l")
  suspend: Mode(o:20)
  Trigger(del) Mode(o:20) g ] [
ModeChanged(no:n)
  cooldown
Trigger(add) Mode(o:20) g ] [
on_key: :
ModeChanged(n:c)
  new Mode(c:20)
  Safe(true)
Trigger(add) Mode(c:20) <C-R>
on_key: w
BufNew(33)
BufNew(34)
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:20)
  Trigger(del) Mode(n:20) z " ' ` g' g` z= , g ] <C-W> [
Trigger(del) Mode(n:1) ] ` [ ' " z g' g` z= <C-W> , g
Trigger(del) Mode(o:20) g ] [
Trigger(del) Mode(c:20) <C-R>
Trigger(add) Mode(n:20) ` ' " g' g` z= , g ] <C-W> [ z
new Mode(n:20)
on_key: :
ModeChanged(n:c)
  new Mode(c:20)
  Safe(true)
Trigger(add) Mode(c:20) <C-R>
on_key: q
on_key: a
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:20)
  Trigger(del) Mode(n:20) z " ' ` g' g` z= , g ] <C-W> [
Trigger(add) Mode(n:20) ` ' " g' g` z= , g ] <C-W> [ z


Debug Started for v3.16.0
{
  branch = "main",
  commit = "0e76a87ac51772569aec678dc74baa8e2a86100c"
}
new Mode(n:1)
Trigger(add) Mode(n:1) " ' ` z= g' g` ] [ <C-W> z , g
Trigger(del) Mode(n:1) g' g` ] [ <C-W> z " g ' ` z= ,
LspAttach(1)
new Mode(n:1)
Trigger(add) Mode(n:1) " ` ' g' g` z= g [ z , ] <C-W>
on_key: j
BufNew(2)
on_key: j
on_key: j
on_key: j
BufNew(3)
on_key: j
on_key: j
BufNew(4)
on_key: j
on_key: :
ModeChanged(n:c)
  new Mode(c:1)
  Safe(true)
Trigger(add) Mode(c:1) <C-R>
on_key: w
BufNew(5)
BufNew(6)
BufNew(7)
BufNew(8)
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) g' g` ] [ <C-W> z " g ' ` z= ,
Trigger(del) Mode(c:1) <C-R>
Trigger(add) Mode(n:1) " ` ' g' g` z= g [ z , ] <C-W>
new Mode(n:1)
BufNew(9)
on_key: j
on_key: j
on_key: j
on_key: j
on_key: K
BufNew(10)
on_key: k
on_key: K
BufNew(11)
BufNew(12)
BufNew(13)
BufNew(14)
BufNew(15)
BufNew(16)
BufNew(17)
on_key: k
BufNew(18)
on_key: k
BufNew(19)
BufNew(20)
on_key: k
BufNew(21)
on_key: K
BufNew(22)
BufNew(23)
BufNew(24)
BufNew(25)
on_key: j
on_key: j
BufNew(26)
BufNew(27)
on_key: j
on_key: j
BufNew(28)
BufNew(29)
BufNew(30)
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: J
on_key: J
on_key: J
on_key: J
on_key: j
on_key: j
on_key: i
ModeChanged(n:i)
  new Mode(i:1)
  Safe(true)
Trigger(add) Mode(i:1) <C-R>
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
BufNew(31)
on_key: k
on_key: k
on_key: K
BufNew(32)
on_key: j
on_key: k
on_key: w
on_key: w
on_key: w
on_key: K
BufNew(33)
on_key: K
BufNew(34)
on_key: j
on_key: j
on_key: K
on_key: k
on_key: K
BufNew(35)
on_key: j
on_key: j
on_key: j
on_key: K
BufNew(36)
on_key: j
on_key: K
BufNew(37)
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: K
BufNew(38)
on_key: w
on_key: w
on_key: K
BufNew(39)
on_key: :
ModeChanged(n:c)
  new Mode(c:1)
  Safe(true)
Trigger(add) Mode(c:1) <C-R>
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) g' g` ] [ <C-W> z " g ' ` z= ,
Trigger(add) Mode(n:1) " ` ' g' g` z= g [ z , ] <C-W>
BufNew(40)
BufNew(41)
on_key: u
on_key: ,
State(start): Mode(n:0) Node(,) { keys = "," }
  update Mode(n:1)
  continue: , Mode(n:1)
  getchar
  on_key: w
  got: w
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) g' g` ] [ <C-W> z " g ' ` z= ,
  feedkeys: Mode(n:1) ,w
on_key: ,w
Trigger(add) Mode(n:1) " ` ' g' g` z= g [ z , ] <C-W>
BufNew(44)
on_key: V
ModeChanged(n:V)
  new Mode(x:1)
  Safe(true)
  State(start): Mode(x:0) Node() { defer = false }
    update Mode(x:1)
    continue:  Mode(x:1)
    getchar
    Trigger(add) Mode(x:1) " ] [ z <C-W> g
    on_key: j
    got: j
    suspend: Mode(x:1)
    Trigger(del) Mode(x:1) " ] [ z g <C-W>
    feedkeys: Mode(x:1) j
on_key: j
Trigger(add) Mode(x:1) " ] [ z <C-W> g
on_key: j
on_key: j
on_key: j
on_key: j
on_key: j
on_key: d
ModeChanged(V:n)
  Safe(true)
on_key: k
on_key: d
ModeChanged(n:no)
  new Mode(o:1)
  Safe(true)
  State(start): Mode(o:0) Node() { defer = false }
    update Mode(o:1)
    continue:  Mode(o:1)
    getchar
    Trigger(add) Mode(o:1) g ] [
    on_key: d
    got: d
    suspend: Mode(o:1)
    Trigger(del) Mode(o:1) ] g [
    feedkeys: Mode(o:1) d
on_key: d
ModeChanged(no:n)
  Safe(true)
Trigger(add) Mode(o:1) g ] [
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) g' g` ] [ <C-W> z , g " ' ` z=
Trigger(add) Mode(n:1) " ` ' g' g` z= g [ z , ] <C-W>
BufNew(50)
on_key: j
on_key: ]
State(start): Mode(n:0) Node(]) { keys = "]" }
  update Mode(n:1)
  continue: ] Mode(n:1)
  getchar
  on_key: d
  got: d
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) g' g` ] [ <C-W> z , g " ' ` z=
  feedkeys: Mode(n:1) ]d
on_key: ]d
Trigger(add) Mode(n:1) " ` ' g' g` z= g [ z , ] <C-W>
on_key: K
BufNew(53)
on_key: k
on_key: k
on_key: k
on_key: k
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: q
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) g' g` ] [ <C-W> z , g " ' ` z=
Trigger(add) Mode(n:1) " ` ' g' g` z= g [ z , ] <C-W>
